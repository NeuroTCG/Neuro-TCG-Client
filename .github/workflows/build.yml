# https://github.com/abarichello/godot-ci

name: "godot-ci export"
on: push

permissions:
  contents: write

# NOTE: If your `project.godot` is at the repository root, set `PROJECT_PATH` below to ".".

env:
  GODOT_VERSION: 4.3
  EXPORT_NAME: NeuroTCG
  PROJECT_PATH: .

jobs:
  make-release:
    name: Make Release
    runs-on: ubuntu-24.04
    if: startsWith(github.ref, 'refs/tags/v')
    needs:
      - export-windows
      - export-linux
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: binaries
          pattern: release-*
          merge-multiple: false
      - name: Zip directories
        run: |
          for i in binaries/*/; do
            zip -r "${i%/}.zip" "$i"
            echo "Zipped '$i'"
          done
      - name: Create the Release
        uses: softprops/action-gh-release@v2
        with:
          prerelease: false
          files: |
            ${{ github.workspace }}/binaries/*.zip

  export-windows:
    name: Windows Export
    runs-on: ubuntu-24.04
    container:
      image: barichello/godot-ci:4.3
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mkdir -v -p ~/.config/
          mv /root/.config/godot ~/.config/godot
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
      - name: Windows Build
        run: |
          mkdir -v -p build/windows
          EXPORT_DIR="$(readlink -f build)"
          cd $PROJECT_PATH
          godot --headless --verbose --export-release "windows" "$EXPORT_DIR/windows/$EXPORT_NAME.exe"
      - name: Setup nodejs
        run: |
          apt update
          apt install -y nodejs
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-windows
          path: build/windows

  export-linux:
    name: Linux Export
    runs-on: ubuntu-20.04
    container:
      image: barichello/godot-ci:4.3
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
      - name: Linux Build
        run: |
          mkdir -v -p build/linux
          EXPORT_DIR="$(readlink -f build)"
          cd $PROJECT_PATH
          godot --headless --verbose --export-release "linux" "$EXPORT_DIR/linux/$EXPORT_NAME.x86_64"
      - name: Setup nodejs
        run: |
          apt update
          apt install -y nodejs
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-linux
          path: build/linux

  export-web:
    name: Web Export
    runs-on: ubuntu-20.04
    container:
      image: barichello/godot-ci:4.3
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
      - name: Web Build
        run: |
          mkdir -v -p build/web
          EXPORT_DIR="$(readlink -f build)"
          cd $PROJECT_PATH
          godot --headless --verbose --export-release "web" "$EXPORT_DIR/web/index.html"
      - name: Setup nodejs
        run: |
          apt update
          apt install -y nodejs
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: web
          path: build/web
      - name: Install rsync ðŸ“š
        run: |
          apt-get update && apt-get install -y rsync
      - name: Deploy to GitHub Pages ðŸš€
        uses: JamesIves/github-pages-deploy-action@releases/v4
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          branch: gh-pages # The branch the action should deploy to.
          folder: build/web # The folder the action should deploy.

#  export-mac:
#    name: Mac Export
#    runs-on: ubuntu-20.04
#    container:
#      image: barichello/godot-ci:4.3
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v4
#        with:
#          lfs: true
#      - name: Setup
#        run: |
#          mkdir -v -p ~/.local/share/godot/export_templates/
#          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
#      - name: Mac Build
#        run: |
#          mkdir -v -p build/mac
#          EXPORT_DIR="$(readlink -f build)"
#          cd $PROJECT_PATH
#          godot --headless --verbose --export-release "mac" "$EXPORT_DIR/mac/$EXPORT_NAME.zip"
#      - name: Upload Artifact
#        uses: actions/upload-artifact@v4
#        with:
#          name: mac
#          path: build/mac
